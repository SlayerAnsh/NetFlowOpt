load ../linearProgrammingModelVariables

c(1) = $uniform(0,1)$;
c(2) = $uniform(0,1)$;
c(3) = $uniform(0,1)$;
c(4) = $uniform(0,1)$;
c(5) = $uniform(0,1)$;
c(6) = $uniform(0,1)$;
c(7) = $uniform(0,1)$;
c(8) = $uniform(0,1)$;
c(9) = $uniform(0,1)$;
c(10) = $uniform(0,1)$;
c(11) = $uniform(0,1)$;
c(12) = $uniform(0,1)$;
c(13) = $uniform(0,1)$;
c(14) = $uniform(0,1)$;
c(15) = $uniform(0,1)$;
c(16) = $uniform(0,1)$;
c(17) = $uniform(0,1)$;
c(18) = $uniform(0,1)$;
c(19) = $uniform(0,1)$;
c(20) = $uniform(0,1)$;
c(21) = $uniform(0,1)$;
c(22) = $uniform(0,1)$;
c(23) = $uniform(0,1)$;
c(24) = $uniform(0,1)$;
c(25) = $uniform(0,1)$;
c(26) = $uniform(0,1)$;
c(27) = $uniform(0,1)$;
c(28) = $uniform(0,1)$;
c(29) = $uniform(0,1)$;
c(30) = $uniform(0,1)$;
c(31) = $uniform(0,1)$;
c(32) = $uniform(0,1)$;
c(33) = $uniform(0,1)$;
c(34) = $uniform(0,1)$;
c(35) = $uniform(0,1)$;
c(36) = $uniform(0,1)$;
c(37) = $uniform(0,1)$;
c(38) = $uniform(0,1)$;
c(39) = $uniform(0,1)$;
c(40) = $uniform(0,1)$;
c(41) = $uniform(0,1)$;
c(42) = $uniform(0,1)$;
c(43) = $uniform(0,1)$;
c(44) = $uniform(0,1)$;
c(45) = $uniform(0,1)$;
c(46) = $uniform(0,1)$;
c(47) = $uniform(0,1)$;
c(48) = $uniform(0,1)$;
c(49) = $uniform(0,1)$;
c(50) = $uniform(0,1)$;
c(51) = $uniform(0,1)$;
c(52) = $uniform(0,1)$;
c(53) = $uniform(0,1)$;
c(54) = $uniform(0,1)$;
c(55) = $uniform(0,1)$;
c(56) = $uniform(0,1)$;
c(57) = $uniform(0,1)$;
c(58) = $uniform(0,1)$;
c(59) = $uniform(0,1)$;
c(60) = $uniform(0,1)$;
c(61) = $uniform(0,1)$;
c(62) = $uniform(0,1)$;
c(63) = $uniform(0,1)$;
c(64) = $uniform(0,1)$;
c(65) = $uniform(0,1)$;
c(66) = $uniform(0,1)$;
c(67) = $uniform(0,1)$;
c(68) = $uniform(0,1)$;
c(69) = $uniform(0,1)$;
c(70) = $uniform(0,1)$;
c(71) = $uniform(0,1)$;
c(72) = $uniform(0,1)$;
c(73) = $uniform(0,1)$;
c(74) = $uniform(0,1)$;
c(75) = $uniform(0,1)$;
c(76) = $uniform(0,1)$;
c(77) = $uniform(0,1)$;
c(78) = $uniform(0,1)$;
c(79) = $uniform(0,1)$;
c(80) = $uniform(0,1)$;



%solve the optimization: (code copied from nf.m)
LB=zeros(numArcs,1);
if useOctave
	ctype = repmat('S',length(b),1);
	[xopt fval exitflag] = glpk(c,A,b, LB,[],ctype);
else
	[xopt fval exitflag] = linprog(c,[],[],A,b, LB);
end

%and display the classification: which of the output arcs took the flow
disp(cat(1, 1, 80, xopt)); %Outputs vector of all nodes that were hit
